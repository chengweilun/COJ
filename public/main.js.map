{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/new-problem/new-problem.component.css","webpack:///./src/app/new-problem/new-problem.component.html","webpack:///./src/app/new-problem/new-problem.component.ts","webpack:///./src/app/problem-detail/problem-detail.component.css","webpack:///./src/app/problem-detail/problem-detail.component.html","webpack:///./src/app/problem-detail/problem-detail.component.ts","webpack:///./src/app/problem-list/problem-list.component.css","webpack:///./src/app/problem-list/problem-list.component.html","webpack:///./src/app/problem-list/problem-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!--<h1>Welcome to {{ title }}!</h1>-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './problem-list/problem-list.component';\nimport { DataService } from './data.service';\nimport { ProblemDetailComponent } from './problem-detail/problem-detail.component';\nimport { routing } from './app.routes';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { NewProblemComponent } from './new-problem/new-problem.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NavbarComponent,\n    NewProblemComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    routing,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: 'data',\n      useClass: DataService\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full'\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problems/:id',\n    component: ProblemDetailComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'problems'\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","import {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ProblemModel } from './problem.model';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport {BehaviorSubject} from 'rxjs';\nimport {subscribeToPromise} from 'rxjs/internal-compatibility';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class DataService {\n\n  private problemsSource = new BehaviorSubject<ProblemModel[]>([]);\n  constructor(private http: HttpClient) { }\n\n  getProblems(): Observable<ProblemModel[]> {\n    this.http.get<ProblemModel[]>('api/v1/problems').\n    toPromise().then((res) => {\n    this.problemsSource.next(res);\n    }).catch((error) => console.log(error));\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Observable<ProblemModel> {\n    return this.http.get<ProblemModel>(`api/v1/problems/${id}`).pipe(\n      tap(), catchError(this.handleError<ProblemModel>('getProblem')));\n  }\n\n  addProblem(newProblem: ProblemModel): Observable<ProblemModel> {\n    return this.http.post<ProblemModel>('api/v1/problems', newProblem, httpOptions).pipe(\n      tap(_ => this.getProblems()), catchError(this.handleError<ProblemModel>('addProblem'))\n    );\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">COJ</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Dropdown\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n          </div>\\n        </li>\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1wcm9ibGVtL25ldy1wcm9ibGVtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n<form #formRef=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"problemName\\\">Problem Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\" required placeholder=\\\"Enter new problem name\\\" [(ngModel)]=\\\"newProblem.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    <!--<small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>-->\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"problemDescription\\\">Problem Description</label>\\n    <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDescription\\\" required placeholder=\\\"Enter new problem description\\\" [(ngModel)]=\\\"newProblem.desc\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"problemDifficult\\\">New Problem Difficult</label>\\n    <select class=\\\"form-control\\\" id=\\\"problemDifficult\\\" [(ngModel)]=\\\"newProblem.difficulty\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n        {{difficulty}}\\n      </option>\\n    </select>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addNewProblem()\\\">Add Problem</button>\\n    </div>\\n  </div>\\n</form>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { ProblemModel } from '../problem.model';\n\n\nconst DEFAULT_PROBLEM: ProblemModel = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'Easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  public difficulties = ['Easy', 'Medium', 'Hard', 'Super'];\n  newProblem: ProblemModel = Object.assign({}, DEFAULT_PROBLEM);\n  constructor(@Inject('data') private data) { }\n\n  ngOnInit() {\n  }\n\n  addNewProblem(): void {\n    this.data.addProblem(this.newProblem).subscribe();\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2JsZW0tZGV0YWlsL3Byb2JsZW0tZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class = \\\"col-xs-12 col-m-4\\\">\\n    <div>\\n      <h2>{{problem.id}}. {{problem.name}}</h2>\\n      <p>{{problem.desc}}</p><br />\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { ProblemModel } from '../problem.model';\nimport { ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n  problem: ProblemModel;\n\n  constructor(@Inject('data') private data, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getProblem();\n  }\n\n\n  getProblem(): void {\n    let id;\n    this.route.params.subscribe(params => {\n      id = +params['id'];\n    });\n    this.data.getProblem(id)\n      .subscribe(pro => this.problem = pro);\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n/*.span {*/\\n\\n/*width:200px; text-align:center;*/\\n\\n/*}*/\\n\\n/*span {width:60px; text-align:center; display:block; }*/\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n  width:60px; text-align:center;\\n  display:inline-block;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvYmxlbS1saXN0L3Byb2JsZW0tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtBQUNwQjs7QUFFQSxVQUFVOztBQUNSLGtDQUFrQzs7QUFDcEMsSUFBSTs7QUFFSix3REFBd0Q7O0FBRXhEO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsVUFBVSxFQUFFLGlCQUFpQjtFQUM3QixvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGlmZmljdWx0eSB7XG4gIG1pbi13aWR0aDogNjVweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4vKi5zcGFuIHsqL1xuICAvKndpZHRoOjIwMHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsqL1xuLyp9Ki9cblxuLypzcGFuIHt3aWR0aDo2MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgZGlzcGxheTpibG9jazsgfSovXG5cbi5sYWJlbC5kaWZmaWN1bHR5IHtcbiAgcGFkZGluZy10b3A6IDAuNmVtO1xuICBjb2xvcjogI2ZiZmRmYTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB3aWR0aDo2MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG59XG5cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG59XG5cbi5kaWZmLWVhc3kge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDJlYmY0O1xufVxuXG4uZGlmZi1tZWRpdW0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTJjZjVjO1xufVxuXG4uZGlmZi1oYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RkMGQxZTtcbn1cblxuLmRpZmYtc3VwZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGQxNmUyO1xufVxuIl19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem><br>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of mockPro\\\" [routerLink]=\\\"['/problems',problem.id]\\\">\\n      <span class=\\\"{{ 'label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong>{{problem.id}}. {{problem.name}} <br></strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ProblemModel } from '../problem.model';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\n\nexport class ProblemListComponent implements OnInit {\n  mockPro: ProblemModel[] = [];\n  constructor(@Inject( 'data' ) private data) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  getProblems(): void {\n    this.data.getProblems().subscribe(problems => this.mockPro = problems);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}